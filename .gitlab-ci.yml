stages:
  - static
  - build
  - publish
  - release

variables:
  SECURE_FILES_DOWNLOAD_PATH: '.secure_files/'

.download_secure_files: &download_secure_files
  - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash

default:
  image: sbtscala/scala-sbt:eclipse-temurin-jammy-17.0.5_8_1.8.2_2.13.10

info:
  stage: static
  script:
    - echo "Using java version:"
    - java -version
    - echo "Using scala version:"
    - scala --version
  tags:
    - docker

validate:
  stage: static
  script:
    - echo "Checking code formatting"
    - *download_secure_files
    - sbt check
  tags:
    - docker

test:
  stage: build
  script:
    - echo "Running unit tests"
    - *download_secure_files
    - sbt test
  tags:
    - docker

package:
  stage: build
  script:
    - echo "Building packages"
    - *download_secure_files
    - sbt clean package
  tags:
    - docker

publish_publisher:
  stage: publish
  script:
    - echo "Publishing Artifacts for Multicast Publisher"
    - *download_secure_files
    - sbt clean multicast-publisher/Universal/publish
  when: manual
  tags:
    - docker

publish_receiver:
  stage: publish
  script:
    - echo "Publishing Artifacts for Multicast Receiver"
    - *download_secure_files
    - sbt clean multicast-receiver/Universal/publish
  when: manual
  tags:
    - docker

publish_snooper:
  stage: publish
  script:
    - echo "Publishing Artifacts for Multicast Snooper"
    - *download_secure_files
    - sbt clean multicast-snooper/Universal/publish
  when: manual
  tags:
    - docker

release:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  script:
    - echo "Releasing from $TAG"
    - *download_secure_files
    # Get cloudflared
    - mkdir -p /opt/cloudflare
    - wget -O /opt/cloudflare/cloudflared -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
    - chmod -v +x /opt/cloudflare/cloudflared
    - /opt/cloudflare/cloudflared --version
    # put SSH key in `.ssh and make it accessible
    - mkdir -p ~/.ssh
    - cp -v .secure_files/gitlab-deploy-token-private-key ~/.ssh/id_rsa; chmod 0600 ~/.ssh/id_rsa
    - cp -v .secure_files/ssh-config-cloudflared ~/.ssh/config
    - ssh -T git@$GITLAB_SSH_HOST
    # configure git to use email of commit-owner
    - git config --global http.sslVerify false
    - git config --global pull.ff only
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "ðŸ¤– GitLab CI/CD Bot"
    - echo "Setting origin remote to 'git@$GITLAB_SSH_HOST:$CI_PROJECT_PATH.git'"
    # first cleanup any existing named remotes called 'origin' before re-setting the url
    - git remote rm origin
    - git remote add origin git@$GITLAB_SSH_HOST:$CI_PROJECT_PATH.git
    - git fetch origin
    # have the gitlab runner checkout be linked to the branch we are building
    - git checkout -B "$CI_BUILD_REF_NAME"
    - echo "git branch --set-upstream-to=origin/$CI_BUILD_REF_NAME $CI_BUILD_REF_NAME"
    - git branch --set-upstream-to=origin/$CI_BUILD_REF_NAME $CI_BUILD_REF_NAME
    - sbt "release with-defaults default-tag-exists-answer o skip-tests"
  resource_group: release
  tags:
    - docker
